import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet, Alert } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

interface DebugPanelProps {
  visible: boolean;
  onClose: () => void;
}

export const DebugPanel: React.FC<DebugPanelProps> = ({ visible, onClose }) => {
  const clearUserData = async () => {
    Alert.alert(
      '清除用户数据',
      '这将清除所有用户数据，模拟第一次打开APP。确定要继续吗？',
      [
        {
          text: '取消',
          style: 'cancel',
        },
        {
          text: '确定',
          style: 'destructive',
          onPress: async () => {
            try {
              const keysToRemove = [
                'userData',
                'authToken',
                'searchHistory',
                'vocabulary',
                'learningRecords',
                'userStats',
                'badges',
                'last_sync_time',
                'user_stats_cache',
                'user_vocabulary_cache',
                'badges_cache',
                'selectedLanguage',
                'learningLanguages',
                'appLanguage',
                'initialLanguageSetup',
                'autoGeneratedGuestId',
                'sync_queue',
                'failed_sync_items'
              ];

              await AsyncStorage.multiRemove(keysToRemove);
              Alert.alert('成功', '用户数据已清除，请重启APP');
              onClose();
            } catch (error) {
              console.error('清除用户数据失败:', error);
              Alert.alert('错误', '清除用户数据失败');
            }
          },
        },
      ]
    );
  };

  if (!visible) return null;

  return (
    <View style={styles.container}>
      <View style={styles.panel}>
        <Text style={styles.title}>调试面板</Text>
        <Text style={styles.subtitle}>用于开发和测试</Text>
        
        <TouchableOpacity style={styles.button} onPress={clearUserData}>
          <Text style={styles.buttonText}>清除用户数据</Text>
        </TouchableOpacity>
        
        <TouchableOpacity style={[styles.button, styles.closeButton]} onPress={onClose}>
          <Text style={styles.closeButtonText}>关闭</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 9999,
  },
  panel: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 20,
    margin: 20,
    minWidth: 300,
    alignItems: 'center',
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 8,
    color: '#333',
  },
  subtitle: {
    fontSize: 14,
    color: '#666',
    marginBottom: 20,
  },
  button: {
    backgroundColor: '#7C3AED',
    paddingHorizontal: 20,
    paddingVertical: 12,
    borderRadius: 8,
    marginVertical: 8,
    minWidth: 200,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  closeButton: {
    backgroundColor: '#f1f1f1',
    marginTop: 16,
  },
  closeButtonText: {
    color: '#666',
    fontSize: 16,
    fontWeight: '600',
  },
}); 